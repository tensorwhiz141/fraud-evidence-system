// src/Pages/AdminDashboard.jsx
import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport EvidenceLibrary from '../components/EvidenceLibrary';\n\nconst AdminDashboard = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('evidence');\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({ email: '', password: '', role: 'public', firstName: '', lastName: '' });\n\n  const backendUrl = import.meta.env.VITE_BACKEND_URL || process.env.REACT_APP_BACKEND_URL || 'http://localhost:5050';\n\n  useEffect(() => {\n    checkAdminAccess();\n    if (activeTab === 'users') {\n      fetchUsers();\n    }\n  }, [activeTab]);\n\n  const checkAdminAccess = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        toast.error('❌ Please login to access admin dashboard');\n        window.location.href = '/';\n        return;\n      }\n\n      const response = await axios.get(`${backendUrl}/api/auth/verify`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n\n      if (response.data && response.data.role === 'admin') {\n        setUser(response.data);\n        toast.success(`✅ Welcome Admin: ${response.data.email}`);\n      } else {\n        toast.error('❌ Admin access required');\n        window.location.href = '/';\n      }\n    } catch (error) {\n      console.error('Admin access check failed:', error);\n      toast.error('❌ Admin access verification failed');\n      window.location.href = '/';\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await axios.get(`${backendUrl}/api/user-management/users`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      setUsers(response.data.users || []);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      toast.error('❌ Failed to fetch users');\n    }\n  };\n\n  const createUser = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('authToken');\n      await axios.post(`${backendUrl}/api/user-management/users`, newUser, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      toast.success('✅ User created successfully');\n      setNewUser({ email: '', password: '', role: 'public', firstName: '', lastName: '' });\n      fetchUsers();\n    } catch (error) {\n      console.error('Error creating user:', error);\n      toast.error('❌ Failed to create user');\n    }\n  };\n\n  const deleteUser = async (userId) => {\n    if (!window.confirm('Are you sure you want to delete this user?')) return;\n    \n    try {\n      const token = localStorage.getItem('authToken');\n      await axios.delete(`${backendUrl}/api/user-management/users/${userId}`, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      toast.success('✅ User deleted successfully');\n      fetchUsers();\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      toast.error('❌ Failed to delete user');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <div className=\"text-xl\">🔄 Verifying admin access...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">🛡️ Admin Dashboard</h1>\n              <p className=\"text-sm text-gray-600\">Welcome, {user?.email} | Role: Admin</p>\n            </div>\n            <div className=\"flex space-x-4\">\n              <a href=\"/\" className=\"text-blue-600 hover:text-blue-800\">← Home</a>\n              <button \n                onClick={() => {\n                  localStorage.removeItem('authToken');\n                  window.location.href = '/';\n                }}\n                className=\"text-red-600 hover:text-red-800\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <nav className=\"flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('evidence')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'evidence' \n                  ? 'border-blue-500 text-blue-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              📁 Evidence Library\n            </button>\n            <button\n              onClick={() => setActiveTab('users')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'users' \n                  ? 'border-blue-500 text-blue-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              👥 User Management\n            </button>\n            <button\n              onClick={() => setActiveTab('settings')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                activeTab === 'settings' \n                  ? 'border-blue-500 text-blue-600' \n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              ⚙️ Settings\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n        {activeTab === 'evidence' && (\n          <div>\n            <EvidenceLibrary userRole=\"admin\" />\n          </div>\n        )}\n\n        {activeTab === 'users' && (\n          <div className=\"space-y-6\">\n            <h2 className=\"text-lg font-medium text-gray-900\">User Management</h2>\n            \n            {/* Create User Form */}\n            <div className=\"bg-white shadow rounded-lg p-6\">\n              <h3 className=\"text-md font-medium text-gray-900 mb-4\">Create New User</h3>\n              <form onSubmit={createUser} className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={newUser.email}\n                  onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                  className=\"border rounded-md px-3 py-2\"\n                  required\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={newUser.password}\n                  onChange={(e) => setNewUser({...newUser, password: e.target.value})}\n                  className=\"border rounded-md px-3 py-2\"\n                  required\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  value={newUser.firstName}\n                  onChange={(e) => setNewUser({...newUser, firstName: e.target.value})}\n                  className=\"border rounded-md px-3 py-2\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  value={newUser.lastName}\n                  onChange={(e) => setNewUser({...newUser, lastName: e.target.value})}\n                  className=\"border rounded-md px-3 py-2\"\n                />\n                <select\n                  value={newUser.role}\n                  onChange={(e) => setNewUser({...newUser, role: e.target.value})}\n                  className=\"border rounded-md px-3 py-2\"\n                >\n                  <option value=\"public\">Public User</option>\n                  <option value=\"investigator\">Investigator</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n                >\n                  Create User\n                </button>\n              </form>\n            </div>\n\n            {/* Users List */}\n            <div className=\"bg-white shadow rounded-lg\">\n              <div className=\"px-6 py-4 border-b\">\n                <h3 className=\"text-md font-medium text-gray-900\">All Users</h3>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Role</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {users.map((user) => (\n                      <tr key={user._id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div>\n                            <div className=\"text-sm font-medium text-gray-900\">{user.email}</div>\n                            <div className=\"text-sm text-gray-500\">{user.firstName} {user.lastName}</div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            user.role === 'admin' ? 'bg-red-100 text-red-800' :\n                            user.role === 'investigator' ? 'bg-blue-100 text-blue-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {user.role}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                          }`}>\n                            {user.isActive ? 'Active' : 'Inactive'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(user.createdAt).toLocaleDateString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <button\n                            onClick={() => deleteUser(user._id)}\n                            className=\"text-red-600 hover:text-red-900 ml-4\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'settings' && (\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Admin Settings</h2>\n            <div className=\"space-y-4\">\n              <div className=\"border-l-4 border-blue-500 pl-4\">\n                <h3 className=\"font-medium\">Admin Permissions</h3>\n                <p className=\"text-sm text-gray-600\">✅ View Evidence Library</p>\n                <p className=\"text-sm text-gray-600\">✅ Share Evidence</p>\n                <p className=\"text-sm text-gray-600\">✅ Delete Evidence</p>\n                <p className=\"text-sm text-gray-600\">✅ Export Evidence</p>\n                <p className=\"text-sm text-gray-600\">✅ Manage User Roles</p>\n                <p className=\"text-sm text-gray-600\">✅ Case Escalation</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;